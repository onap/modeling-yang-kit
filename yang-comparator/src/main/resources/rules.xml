<?xml version="1.0" encoding="UTF-8" ?>
<rules>
    <rule>
        <rule-id>schema-node-rule1</rule-id>
        <statements>
            <statement>container</statement>
            <statement>list</statement>
            <statement>choice</statement>
            <statement>case</statement>
            <statement>rpc</statement>
            <statement>action</statement>
            <statement>input</statement>
            <statement>output</statement>
            <statement>notification</statement>
            <statement>leaf</statement>
            <statement>leaf-list</statement>
            <statement>anyxml</statement>
            <statement>anydata</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add an optional schema node, it's backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>schema-node-rule2</rule-id>
        <statements>
            <statement>container</statement>
            <statement>list</statement>
            <statement>choice</statement>
            <statement>case</statement>
            <statement>rpc</statement>
            <statement>action</statement>
            <statement>input</statement>
            <statement>output</statement>
            <statement>notification</statement>
            <statement>leaf</statement>
            <statement>leaf-list</statement>
            <statement>anyxml</statement>
            <statement>anydata</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete a schema node, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>schema-node-rule3</rule-id>
        <statements>
            <statement>container</statement>
            <statement>list</statement>
            <statement>choice</statement>
            <statement>case</statement>
            <statement>rpc</statement>
            <statement>action</statement>
            <statement>input</statement>
            <statement>output</statement>
            <statement>notification</statement>
            <statement>leaf</statement>
            <statement>leaf-list</statement>
            <statement>anyxml</statement>
            <statement>anydata</statement>
        </statements>
        <condition>mandatory-added</condition>
        <compatible>non-backward-compatible</compatible>
        <description>add a mandatory true schema node, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>typedef-rule1</rule-id>
        <statements>
            <statement>typedef</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add a typedef, it's backward-compatible</description>
    </rule>
    <rule>
        <rule-id>typedef-rule2</rule-id>
        <statements>
            <statement>typedef</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete a typedef, it's backward-compatible</description>
    </rule>
    <rule>
        <rule-id>type-changed-rule1</rule-id>
        <statements>
            <statement>type</statement>
        </statements>
        <condition>integer-type-changed</condition>
        <compatible>backward-compatible</compatible>
        <description>type changed from one integer to other integer, it's backward-compatible</description>
    </rule>
    <rule>
        <rule-id>type-changed-rule2</rule-id>
        <statements>
            <statement>type</statement>
        </statements>
        <condition>changed</condition>
        <except-condition>integer-type-changed</except-condition>
        <compatible>non-backward-compatible</compatible>
        <description>type changed, it's non-backward-compatible</description>
    </rule>
    <rule>
        <rule-id>scope-expanded-rule1</rule-id>
        <statements>
            <statement>range</statement>
            <statement>length</statement>
            <statement>fraction-digits</statement><!-- new value is smaller -->
            <statement>min-elements</statement><!-- new value is smaller -->
            <statement>max-elements</statement><!-- new value is greater -->
            <statement>mandatory</statement><!-- from true to false -->
            <statement>config</statement><!-- from false to true-->
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description> the scope is expanded, it's backward-compatible</description>
    </rule>
    <rule>
        <rule-id>scope-reduced-rule1</rule-id>
        <statements>
            <statement>range</statement>
            <statement>length</statement>
            <statement>fraction-digits</statement><!-- new value is greater -->
            <statement>min-elements</statement><!-- new value is greater -->
            <statement>max-elements</statement><!-- new value is smaller -->
            <statement>mandatory</statement><!-- from false to true -->
            <statement>config</statement><!-- from true to false-->
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description> the scope is reduced, it's non-backward-compatible</description>
    </rule>
    <rule>
        <rule-id>enumeration-bits-rule1</rule-id>
        <statements>
            <statement>enum</statement>
            <statement>bit</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add a enum/bit, it's backward-compatible</description>
    </rule>
    <rule>
        <rule-id>enumeration-bits-rule2</rule-id>
        <statements>
            <statement>enum</statement>
            <statement>bit</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete a enum/bit, it's non-backward-compatible</description>
    </rule>
    <rule>
        <rule-id>enumeration-bits-rule3</rule-id>
        <statements>
            <statement>enum</statement>
            <statement>bit</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description>change a enum/bit,for example, the value of this enum is changed, it's non-backward-compatible</description>
    </rule>
    <rule>
        <rule-id>default-rule</rule-id>
        <statements>
            <statement>default</statement>
        </statements>
        <condition>any</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change of default will be treated as non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>pattern-rule1</rule-id>
        <statements>
            <statement>pattern</statement>
        </statements>
        <condition>added</condition>
        <compatible>non-backward-compatible</compatible>
        <description>add a new pattern ,it's a non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>pattern-rule2</rule-id>
        <statements>
            <statement>pattern</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>backward-compatible</compatible>
        <description>delete a pattern ,it's a backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>pattern-rule3</rule-id>
        <statements>
            <statement>pattern</statement>
        </statements>
        <condition>changed</condition>
        <compatible>unknown</compatible>
        <description>pattern is changed ,it's a unknown change</description>
    </rule>
    <rule>
        <rule-id>modifier-rule1</rule-id>
        <statements>
            <statement>modifier</statement>
        </statements>
        <condition>any</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change of modifier will be treated as a non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>key-rule</rule-id>
        <statements>
            <statement>key</statement>
        </statements>
        <condition>any</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change of key will be treated as a non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>mandatory-rule1</rule-id>
        <statements>
            <statement>mandatory</statement>
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description>from mandatory false to mandatory true, it's non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>mandatory-rule2</rule-id>
        <statements>
            <statement>mandatory</statement>
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description>from mandatory true to mandatory false, it's backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>unique-rule1</rule-id>
        <statements>
            <statement>unique</statement>
        </statements>
        <condition>added</condition>
        <compatible>non-backward-compatible</compatible>
        <description>add a new unique, it's a non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>unique-rule2</rule-id>
        <statements>
            <statement>unique</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>backward-compatible</compatible>
        <description>delete a  unique, it's a backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>unique-rule3</rule-id>
        <statements>
            <statement>unique</statement>
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description>unique attrs are added, it's a non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>unique-rule4</rule-id>
        <statements>
            <statement>unique</statement>
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description>unique attrs are deleted, it's a non-backward-compatible change</description>
    </rule>
    <rule>
        <rule-id>config-rule1</rule-id>
        <statements>
            <statement>config</statement>
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description>config from false to true, it's a backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>config-rule2</rule-id>
        <statements>
            <statement>config</statement>
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description>config from true to false, it's a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>support-filter-rule1</rule-id>
        <statements>
            <statement>huawei-extension:support-filter</statement>
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description>support-filter from false to true, it's backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>support-filter-rule2</rule-id>
        <statements>
            <statement>huawei-extension:support-filter</statement>
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description>support-filter from true to false, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>path-rule1</rule-id>
        <statements>
            <statement>path</statement>
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description>the node-set which the path points to is expanded, it's backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>path-rule2</rule-id>
        <statements>
            <statement>path</statement>
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description>the node-set which the path points to is reduced, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>path-rule3</rule-id>
        <statements>
            <statement>path</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description>the node-set which the path points to is changed (e.g. from one data node to another data node),
            it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>require-instance-rule1</rule-id>
        <statements>
            <statement>require-instance</statement>
        </statements>
        <condition>expand</condition>
        <compatible>backward-compatible</compatible>
        <description>require-instance from true to false, it's backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>require-instance-rule2</rule-id>
        <statements>
            <statement>require-instance</statement>
        </statements>
        <condition>reduce</condition>
        <compatible>non-backward-compatible</compatible>
        <description>require-instance from false to true, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>units-rule1</rule-id>
        <statements>
            <statement>units</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add a units, it's backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>units-rule2</rule-id>
        <statements>
            <statement>units</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete units, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>units-rule3</rule-id>
        <statements>
            <statement>units</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description>change units, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>when-must-rule1</rule-id>
        <statements>
            <statement>when</statement>
            <statement>must</statement>
        </statements>
        <condition>added</condition>
        <compatible>non-backward-compatible</compatible>
        <description>add a when or must, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>when-must-rule2</rule-id>
        <statements>
            <statement>when</statement>
            <statement>must</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>backward-compatible</compatible>
        <description>delete a when or must, it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>when-must-rule3</rule-id>
        <statements>
            <statement>when</statement>
            <statement>must</statement>
        </statements>
        <condition>changed</condition>
        <compatible>unknown</compatible>
        <description>when or must is changed, it's unknown change.</description>
    </rule>
    <rule>
        <rule-id>if-feature-rule1</rule-id>
        <statements>
            <statement>if-feature</statement>
        </statements>
        <condition>added</condition>
        <compatible>non-backward-compatible</compatible>
        <description>add a if-feature,it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>if-feature-rule2</rule-id>
        <statements>
            <statement>if-feature</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>backward-compatible</compatible>
        <description>delete a if-feature,it's backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>if-feature-rule3</rule-id>
        <statements>
            <statement>if-feature</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description> a if-feature changed,it's non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>belongs-to-rule</rule-id>
        <statements>
            <statement>belongs-to</statement>
        </statements>
        <condition>any</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change for belongs-to is non-backward-compatible.</description>
    </rule>
    <rule>
        <rule-id>prefix-rule</rule-id>
        <statements>
            <statement>prefix</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change for prefix is non-backward-compatible.</description>
    </rule>
    <rule>
        <rule-id>yang-version-rule</rule-id>
        <statements>
            <statement>yang-version</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change for yang-version is non-backward-compatible</description>
    </rule>
    <rule>
        <rule-id>namespace-rule</rule-id>
        <statements>
            <statement>namespace</statement>
        </statements>
        <condition>changed</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any change for namespace is non-backward-compatible.</description>
    </rule>
    <rule>
        <rule-id>identity-rule1</rule-id>
        <statements>
            <statement>identity</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add a new identity, it's a backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>identity-rule2</rule-id>
        <statements>
            <statement>identity</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete a new identity, it's a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>base-rule1</rule-id>
        <statements>
            <statement>base</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add a new base, it's a backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>base-rule2</rule-id>
        <statements>
            <statement>base</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete a base, it's a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>extension-rule1</rule-id>
        <statements>
            <statement>extension</statement>
        </statements>
        <condition>added</condition>
        <compatible>backward-compatible</compatible>
        <description>add a new extension, it's a backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>extension-rule2</rule-id>
        <statements>
            <statement>extension</statement>
        </statements>
        <condition>deleted</condition>
        <compatible>non-backward-compatible</compatible>
        <description>delete a new extension, it's a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>argument-rule</rule-id>
        <statements>
            <statement>argument</statement>
        </statements>
        <condition>any</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any chang for argument is a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>yin-element-rule</rule-id>
        <statements>
            <statement>yin-element</statement>
        </statements>
        <condition>change</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any chang for yin-element is a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>revision-date-rule</rule-id>
        <statements>
            <statement>revision-date</statement>
        </statements>
        <condition>change</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any chang for revision-date is a non-backward-compatible change.</description>
    </rule>
    <rule>
        <rule-id>ordered-by-rule</rule-id>
        <statements>
            <statement>ordered-by</statement>
        </statements>
        <condition>change</condition>
        <compatible>non-backward-compatible</compatible>
        <description>any chang for ordered-by is a non-backward-compatible change.</description>
    </rule>
</rules>